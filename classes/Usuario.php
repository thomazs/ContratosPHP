<?php

include_once '../inc/inc.php';
include_once "Dbo.php";

class Usuario extends Dbo
{

    protected $login, $senha, $nome, $email, $nivel;

    /**
     * @return mixed
     */
    public function getLogin()
    {
        return $this->login;
    }

    /**
     * @param mixed $login
     */
    public function setLogin($login)
    {
        $this->login = $login;
    }

    /**
     * @return mixed
     */
    public function getSenha()
    {
        return $this->senha;
    }

    /**
     * @param mixed $senha
     */
    public function setSenha($senha)
    {
        $this->senha = $this->hash($senha);
    }

    /**
     * @return mixed
     */
    public function getNome()
    {
        return $this->nome;
    }

    /**
     * @param mixed $nome
     */
    public function setNome($nome)
    {
        $this->nome = $nome;
    }

    /**
     * @return mixed
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * @param mixed $email
     */
    public function setEmail($email)
    {
        $this->email = $email;
    }

    /**
     * @return mixed
     */
    public function getNivel()
    {
        return $this->nivel;
    }

    /**
     * @param mixed $nivel
     */
    public function setNivel($nivel)
    {
        $this->nivel = $nivel;
    }

    public function hash($plainPassword){
        $length = strlen($plainPassword);
        $preHash = $length . strrev($plainPassword);
        return md5($preHash);
    }

    public function authenticate($login, $senha){
        try{
            $this->query("select id, login, senha from usuario where login = :login", array('login' => $login));
            $data = $this->fetchAll();
            if (count($data)>0){
                $nsenha = $this->hash($senha);
                $retorno = ($data[0]['senha'] == $nsenha);
                if ($retorno){
                    $this->id = $data[0]['id'];
                    $this->_auth = true;
                }
                return $retorno;
            }
        }catch (Exception $e){

        }
        return false;
    }

    public function applyValues()
    {
        return array(
            'login' => $this->getLogin(),
            'senha' => $this->getSenha(),
            'nome'  => $this->getNome() ,
            'email' => $this->getEmail(),
            'nivel' => $this->getNivel()
        );
    }

    public function choices(){
        return array('nivel' => array(
            'values' => array(
                '1' => 'UsuÃ¡rio Comum',
                '9' => 'Administrador'
            ), 'default' => '1')
        );
    }

    public function login(){
        if (isset($this->_auth) && $this->_auth){
            $_SESSION[SESSION_CTR_VAR] = $this->getId();
        }
    }

    public function loadByData($data, $exceptions = null)
    {
        parent::loadByData($data, $exceptions); // TODO: Change the autogenerated stub
        $this->setSenha($data['senha']);
    }

    public function getBySession(){
        if (isset($_SESSION[SESSION_CTR_VAR])){
            try{
                $this->get($_SESSION[SESSION_CTR_VAR]);
                return $this;
            }catch (Exception $e){

            }
        }
        return null;
    }

}